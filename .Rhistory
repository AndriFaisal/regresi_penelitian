bookdown::render_book()
#horsepower vs mieage
hpMpg <- mtcars[,c('hp','mpg')]
plot(x = hpMpg$hp,y = hpMpg$mpg,
xlab = "Horse Power",
ylab = "Milage",
xlim = c(50,350),
ylim = c(10,35),
main = "Horsepower vs Milage"
)
hpMpg <- mtcars[,c('hp','mpg')]
plot(x = hpMpg$hp,y = hpMpg$mpg,
xlab = "Horse Power",
ylab = "Milage",
xlim = c(50,350),
ylim = c(10,35),
main = "Horsepower vs Milage"
)
hpMpg <- mtcars[,c('hp','mpg')]
plot(x = hpMpg$hp,y = hpMpg$mpg,
xlab = "Horse Power",
ylab = "Milage",
xlim = c(50,350),
ylim = c(10,35),
main = "Horsepower vs Milage"
)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
library(knitr)
dataas <- data.frame(
Asumsi = c("Multikolinearitas", "Heteroskedatisitas", "Autokorelasi", "Asumsi Normal"),
Regresi_Linier_Sederhana = c("X", "V", "V", "V"),
Regresi_Linier_Berganda = c("V", "V", "V", "V")
)
kable(data)
library(knitr)
dataas <- data.frame(
Asumsi = c("Multikolinearitas", "Heteroskedatisitas", "Autokorelasi", "Asumsi Normal"),
Regresi_Linier_Sederhana = c("X", "V", "V", "V"),
Regresi_Linier_Berganda = c("V", "V", "V", "V")
)
kable(dataas)
library(knitr)
dataas <- data.frame(
Asumsi = c("Multikolinearitas", "Heteroskedatisitas", "Autokorelasi", "Asumsi Normal"),
Regresi_Linier_Sederhana = c("X", "V", "V", "V"),
Regresi_Linier_Berganda = c("V", "V", "V", "V")
)
kable(dataas, caption="Perbandingan Tabel Asumsi Regresi")
library(knitr)
dataas <- data.frame(
Asumsi = c("Multikolinearitas", "Heteroskedatisitas", "Autokorelasi", "Asumsi Normal"),
Regresi_Linier_Sederhana = c("X", "V", "V", "V"),
Regresi_Linier_Berganda = c("V", "V", "V", "V")
)
kable(dataas, caption="Perbandingan Tabel Asumsi Regresi")
regmtcars1
iris
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "Tabel Data Mobil")
student
str(mtcars)
head(mtcars)
qqnorm(residuals(regresimtcars1))
regresimtcars1<-lm(mpg~cyl+disp,data=mtcars)
summary(regresimtcars1)
qqnorm(residuals(regresimtcars1))
qqline(residuals(regresimtcars1))
data()
chickwts
ChickWeight
str(ChickWeight)
trees
m1
m1 <- lm(weight ~ Time + Diet,data = ChickWeight)
summary(m1)
m2 <- lm(weight ~ Time + Chick,data = ChickWeight)
summary(m2)
library(caret)
install.packages("caret")
# Load dataset
data(ChickWeight)
# Buat variabel target biner: berat > 100 dianggap 1, sebaliknya 0
ChickWeight$weight_high <- ifelse(ChickWeight$weight > 100, 1, 0)
# Ubah ke faktor
ChickWeight$weight_high <- as.factor(ChickWeight$weight_high)
# Cek struktur data
str(ChickWeight)
logit_model <- glm(weight_high ~ Time + Diet, data = ChickWeight, family = binomial)
summary(logit_model)
# Prediksi probabilitas
pred_prob <- predict(logit_model, type = "response")
# Ubah menjadi kategori (cutoff 0.5)
pred_class <- ifelse(pred_prob > 0.5, 1, 0)
# Konversi ke faktor untuk evaluasi
pred_class <- as.factor(pred_class)
# Confusion Matrix
library(caret)
conf_matrix <- confusionMatrix(pred_class, ChickWeight$weight_high)
print(conf_matrix)
library(car)
vif(logit_model)
# Mengecek normalitas residual pada model regresi
shapiro.test(residuals(model_med1))  # Model hp → wt
# Langkah 1: Pengaruh hp terhadap wt (X -> M)
model_med1 <- lm(wt ~ hp, data = mtcars)
summary(model_med1)
# Langkah 2: Pengaruh wt terhadap mpg dengan kontrol hp (M -> Y dengan X sebagai kontrol)
model_med2 <- lm(mpg ~ hp + wt, data = mtcars)
summary(model_med2)
# Mengecek normalitas residual pada model regresi
shapiro.test(residuals(model_med1))  # Model hp → wt
shapiro.test(residuals(model_med2))  # Model wt → mpg (dengan hp sebagai kontrol)
library(lmtest)
# Uji Breusch-Pagan untuk heteroskedastisitas
bptest(model_med1)  # Model hp → wt
bptest(model_med2)  # Model wt → mpg (dengan hp sebagai kontrol)
# Uji Durbin-Watson untuk autokorelasi residual
dwtest(model_med1)
dwtest(model_med2)
library(car)
# Mengecek multikolinearitas dengan VIF
vif(model_med2)  # Model dengan mediator
weights <- 1 / fitted(model_med1)^2  # Bobot berdasarkan fitted values
model_wls <- lm(wt ~ hp, data = mtcars, weights = weights)
summary(model_wls)
bptest(model_wls)
bgtest(model_wls)
shapiro.test(residuals(model_wls))
library(nlme)
# Model dengan metode GLS
model_gls <- gls(mpg ~ hp + wt, data = mtcars, correlation = corAR1())
summary(model_gls)
shapiro.test(residuals(model_gls))
bptest(model_gls)
shapiro.test(residuals(model_gls))
bptest(residuals(model_gls))
shapiro.test(residuals(model_gls))
bgtest(model_gls)
shapiro.test(residuals(model_gls))
dwtest(model_gls)
shapiro.test(residuals(model_gls))
vif(model_gls)
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "Tabel Data Mobil")
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")])
# Membuat variabel interaksi antara horsepower (hp) dan weight (wt)
mtcars$hp_wt <- mtcars$hp * mtcars$wt
# Model dasar: mpg sebagai fungsi dari hp
model1 <- lm(mpg ~ hp, data = mtcars)
summary(model1)
# Model dengan moderator: mpg sebagai fungsi dari hp dan wt
model2 <- lm(mpg ~ hp + wt, data = mtcars)
summary(model2)
# Model dengan interaksi: mpg sebagai fungsi dari hp, wt, dan interaksi hp*wt
model3 <- lm(mpg ~ hp * wt, data = mtcars)
summary(model3)
# Menghitung residual dari model
residuals_model <- residuals(model3)
# Plot Q-Q
qqnorm(residuals_model)
qqline(residuals_model, col = "red")
# Shapiro-Wilk test
shapiro.test(residuals_model)
# Plot residual vs fitted values
plot(fitted(model3), residuals_model)
abline(h = 0, col = "red")
# Uji Breusch-Pagan
library(lmtest)
bptest(model3)
# Plot residual vs variabel independen hp
plot(mtcars$hp, residuals_model)
abline(h = 0, col = "red")
# Plot residual vs variabel independen wt
plot(mtcars$wt, residuals_model)
abline(h = 0, col = "red")
# Uji Durbin-Watson
dwtest(model3)
#mengatasi heteroskedatisitas
# Transformasi logaritma pada variabel dependen
mtcars$log_mpg <- log(mtcars$mpg)
# Model regresi dengan variabel dependen yang telah ditransformasi
model_trans <- lm(log_mpg ~ hp * wt, data = mtcars)
summary(model_trans)
# Uji Breusch-Pagan pada model baru
bptest(model_trans)
# Menghitung bobot sebagai invers dari residuals kuadrat
weights <- 1 / fitted(lm(abs(residuals_model) ~ model3))^2
str(model3)
weights <- 1 / fitted(lm(abs(residuals_model) ~ model3$fitted.values))^2
# Membuat variabel interaksi antara horsepower (hp) dan weight (wt)
mtcars$hp_wt <- mtcars$hp * mtcars$wt
# Model dasar: mpg sebagai fungsi dari hp
model1 <- lm(mpg ~ hp, data = mtcars)
summary(model1)
# Model dengan moderator: mpg sebagai fungsi dari hp dan wt
model2 <- lm(mpg ~ hp + wt, data = mtcars)
summary(model2)
# Model dengan interaksi: mpg sebagai fungsi dari hp, wt, dan interaksi hp*wt
model3 <- lm(mpg ~ hp * wt, data = mtcars)
summary(model3)
# Menghitung residual dari model
residuals_model <- residuals(model3)
# Plot Q-Q
qqnorm(residuals_model)
qqline(residuals_model, col = "red")
# Shapiro-Wilk test
shapiro.test(residuals_model)
# Plot residual vs fitted values
plot(fitted(model3), residuals_model)
abline(h = 0, col = "red")
# Uji Breusch-Pagan
library(lmtest)
bptest(model3)
# Plot residual vs variabel independen hp
plot(mtcars$hp, residuals_model)
abline(h = 0, col = "red")
# Plot residual vs variabel independen wt
plot(mtcars$wt, residuals_model)
abline(h = 0, col = "red")
# Uji Durbin-Watson
dwtest(model3)
#mengatasi heteroskedatisitas
# Transformasi logaritma pada variabel dependen
mtcars$log_mpg <- log(mtcars$mpg)
# Model regresi dengan variabel dependen yang telah ditransformasi
model_trans <- lm(log_mpg ~ hp * wt, data = mtcars)
summary(model_trans)
# Uji Breusch-Pagan pada model baru
bptest(model_trans)
# Menghitung bobot sebagai invers dari residuals kuadrat
weights <- 1 / fitted(lm(abs(residuals_model) ~ model3$fitted.values))^2
# Model WLS
model_wls <- lm(mpg ~ hp * wt, data = mtcars, weights = weights)
summary(model_wls)
# Uji Breusch-Pagan pada model WLS
bptest(model_wls)
library(sandwich)
library(lmtest)
# Model awal dengan robust standard errors
coeftest(model3, vcov = vcovHC(model3, type = "HC1"))
model_linear <- lm(Volume ~ Girth, data = trees)
anova(model_linear, model_kuadrat)
model_kuadrat <- lm(Volume ~ Girth + I(Girth^2), data = trees)
summary(model_kuadrat)
model_linear <- lm(Volume ~ Girth, data = trees)
anova(model_linear, model_kuadrat)
AICc(model_kuadrat)
summary(model_gls)
library(lmtest)
bptest(model_gls)
gls_model
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")])
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "Tabel Data Mobil (#tab:mtcars)")
library(sandwich)
plot(residuals(lm(mpg ~ cyl + disp, data = mtcars)))
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "(#tab:mtcars) Tabel Data Mobil")
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "(#tab:mtcars) Tabel Data Mobil")
library(knitr)
kable(mtcars[, c("mpg", "cyl", "disp")], caption = "Tabel Data Mobil")
knitr::kable(
head(pressure, 10), caption = 'Here is a nice table!',
booktabs = TRUE
)
